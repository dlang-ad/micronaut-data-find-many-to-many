plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id "org.jetbrains.kotlin.kapt" version '1.3.60'
}

apply plugin: 'maven-publish'
apply plugin: 'kotlin'

version "0.1"
group "example.micronaut"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    jcenter()
    maven { url "https://plugins.gradle.org/m2/"}
    mavenLocal()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    runtimeOnly "com.h2database:h2"

    implementation "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion"
    implementation "io.micronaut.configuration:micronaut-flyway"
    compileOnly "jakarta.persistence:jakarta.persistence-api:2.2.2"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation "mysql:mysql-connector-java:5.1.45"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.10"

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-bom:$micronautVersion"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kapt "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.willowtreeapps.assertk:assertk-jvm:$assertkVersion"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test.classpath += configurations.developmentOnly

mainClassName = "example.micronaut.Application"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

// use JUnit 5 platform
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

processResources {
    from ('src/main/resources/db/migration') {
        into 'db/migration'
    }
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
